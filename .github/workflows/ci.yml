name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/hello/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r hello/requirements.txt

      - name: Run unit tests
        run: |
          source venv/bin/activate
          pytest integration_tests/
        env:
          PYTHONPATH: ./hello

  dockerize:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t flask-example ./hello

      - name: Run Docker container
        run: |
          docker run -d -p 5000:5000 --name flask-example flask-example
          sleep 10  # Allow time for the container to start

  deploy:
    runs-on: ubuntu-latest
    needs: dockerize

    steps:
      - name: Simulate deployment
        run: echo "Simulating deployment..."

  cleanup:
    if: failure()
    runs-on: ubuntu-latest
    needs: [dockerize, deploy]

    steps:
      - name: Cleanup Docker
        run: |
          docker stop flask-example || true
          docker rm flask-example || true
